---
import type { Project } from "../../consts/projects";
import GithubIcon from "../../icons/GithubIcon.astro";
import WebIcon from "../../icons/WebIcon.astro";
import ProjectImage from "./ProjectImage";
import SkillTag from "./SkillTag";

interface Props {
  project: Project;
  reverse?: boolean;
}

const currentPath = Astro.url.pathname;

const { project, reverse } = Astro.props;
---
<div
  class={`project-card items-center flex flex-col tablet:flex-row pb-8 py-8 tablet:gap-8 ${reverse ? "tablet:flex-row-reverse" : ""}`}
>
  <div class="flex flex-col gap-6 tablet:max-w-[450px]">
    <h4 class="font-semibold text-xl sm:text-3xl">{project.name}</h4>
    <p class="opacity-80" id="hola">
      {currentPath === "/en" ? project.descriptionEN : project.description}
    </p>
    <p class="opacity-80">{currentPath === "/en" ? project.extraDescriptionEN : project.extraDescription}</p>
    <div class="flex items-center justify-start gap-3 flex-wrap">
      <a
        href={project.website}
        target="_blank"
        class="border border-[#9e9e9e] px-4 py-2 rounded-md flex items-center justify-center gap-2 hover:bg-[#242424] transition-all duration-200"
        ><WebIcon size={24} /> {currentPath === "/en" ? "Website" : "PaÃÅgina web"}</a
      >
      {
        project.frontendRepo && (
          <a
            href={project.frontendRepo}
            target="_blank"
            class="border border-[#9e9e9e] px-4 py-2 rounded-md flex items-center justify-center gap-2 hover:bg-[#242424] transition-all duration-200"
          >
            <GithubIcon size={24} /> Frontend
          </a>
        )
      }
      {
        project.backendRepo && (
          <a
            href={project.backendRepo}
            target="_blank"
            class="border border-[#9e9e9e] px-4 py-2 rounded-md flex items-center justify-center gap-2 hover:bg-[#242424] transition-all duration-200"
          >
            <GithubIcon size={24} /> Backend
          </a>
        )
      }
    </div>
    <div class="flex items-center justify-start gap-2 flex-wrap">
      {
        project.skills.length > 0 &&
          project.skills.map((skill) => (
            <SkillTag name={skill.name} icon={skill.icon} />
          ))
      }
    </div>
  </div>
  <ProjectImage
    client:load
    name={project.name}
    desktopImage={project.desktopImage}
    tabletImage={project.tabletImage}
    mobileImage={project.mobileImage}
  />
</div>

<style></style>
